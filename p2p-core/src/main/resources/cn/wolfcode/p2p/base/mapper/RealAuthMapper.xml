<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.p2p.base.mapper.RealAuthMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.base.domain.RealAuth">
    <id column="id" property="id" />
    <result column="real_name" property="realName" />
    <result column="sex" property="sex" />
    <result column="born_date" property="bornDate" />
    <result column="id_number" property="idNumber" />
    <result column="address" property="address" />
    <result column="state" property="state" />
    <result column="image1" property="image1" />
    <result column="image2" property="image2" />
    <result column="remark" property="remark" />
    <result column="audit_time" property="auditTime" />
    <result column="apply_time" property="applyTime" />

    <!--内敛映射-->
    <association property="auditor" columnPrefix="auditor_"
                 resultMap="cn.wolfcode.p2p.base.mapper.LoginInfoMapper.SimpleResultMap" />
    <association property="applier" columnPrefix="applier_"
                 resultMap="cn.wolfcode.p2p.base.mapper.LoginInfoMapper.SimpleResultMap" />
  </resultMap>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into real_auth (real_name, sex, born_date, id_number, address, state, image1, 
      image2, remark, audit_time, apply_time, auditor_id, applier_id
      )
    values (#{realName}, #{sex}, #{bornDate}, #{idNumber}, #{address}, #{state}, #{image1},
      #{image2}, #{remark}, #{auditTime}, #{applyTime}, #{auditor.id}, #{applier.id}
      )
  </insert>
  <update id="updateByPrimaryKey">
    update real_auth
    set real_name = #{realName},
      sex = #{sex},
      born_date = #{bornDate},
      id_number = #{idNumber},
      address = #{address},
      state = #{state},
      image1 = #{image1},
      image2 = #{image2},
      remark = #{remark},
      audit_time = #{auditTime},
      apply_time = #{applyTime},
      auditor_id = #{auditor.id},
      applier_id = #{applier.id}
    where id = #{id}
  </update>
  <!--抽取条件-->
  <sql id="columns">
    ra.id, real_name, sex, born_date, id_number, address, ra.state, image1, image2,
    remark, audit_time, apply_time,
    auditor.id auditor_id, auditor.username auditor_username,
    applier.id applier_id, applier.username applier_username
  </sql>
  <sql id="tables">
    real_auth ra
    left join logininfo auditor on ra.auditor_id = auditor.id
    left join logininfo applier on ra.applier_id = applier.id
  </sql>
  <sql id="sql_conditions">
    <where>
      <if test="beginDate != null">
        and apply_time &gt;= #{beginDate}
      </if>
      <if test="endDate != null">
        and apply_time &lt;= #{endDate}
      </if>
      <if test="state != -1">
        and ra.state = #{state}
      </if>
    </where>
  </sql>



  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
      <include refid="columns"/>
    from
      <include refid="tables"/>
    where ra.id = #{id}
  </select>

  <select id="selectForCount" resultType="int" >
    select count(0) from real_auth ra
    <include refid="sql_conditions"/>
  </select>
  <select id="selectForList" resultMap="BaseResultMap" >
    select
    <include refid="columns"/>
    from
    <include refid="tables"/>
    <include refid="sql_conditions"/>
    order by
    <if test="orderBy != null">
      ${orderBy} <if test="orderType != null">${orderType}</if>
    </if>
    limit #{start},#{pageSize}
  </select>
</mapper>